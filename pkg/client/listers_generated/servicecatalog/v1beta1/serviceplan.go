/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/drycc-addons/service-catalog/pkg/apis/servicecatalog/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ServicePlanLister helps list ServicePlans.
// All objects returned here must be treated as read-only.
type ServicePlanLister interface {
	// List lists all ServicePlans in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ServicePlan, err error)
	// ServicePlans returns an object that can list and get ServicePlans.
	ServicePlans(namespace string) ServicePlanNamespaceLister
	ServicePlanListerExpansion
}

// servicePlanLister implements the ServicePlanLister interface.
type servicePlanLister struct {
	listers.ResourceIndexer[*v1beta1.ServicePlan]
}

// NewServicePlanLister returns a new ServicePlanLister.
func NewServicePlanLister(indexer cache.Indexer) ServicePlanLister {
	return &servicePlanLister{listers.New[*v1beta1.ServicePlan](indexer, v1beta1.Resource("serviceplan"))}
}

// ServicePlans returns an object that can list and get ServicePlans.
func (s *servicePlanLister) ServicePlans(namespace string) ServicePlanNamespaceLister {
	return servicePlanNamespaceLister{listers.NewNamespaced[*v1beta1.ServicePlan](s.ResourceIndexer, namespace)}
}

// ServicePlanNamespaceLister helps list and get ServicePlans.
// All objects returned here must be treated as read-only.
type ServicePlanNamespaceLister interface {
	// List lists all ServicePlans in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ServicePlan, err error)
	// Get retrieves the ServicePlan from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.ServicePlan, error)
	ServicePlanNamespaceListerExpansion
}

// servicePlanNamespaceLister implements the ServicePlanNamespaceLister
// interface.
type servicePlanNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.ServicePlan]
}
