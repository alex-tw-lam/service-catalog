/*
Copyright 2024 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1beta1

import (
	v1beta1 "github.com/drycc-addons/service-catalog/pkg/apis/servicecatalog/v1beta1"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
)

// ServiceBrokerLister helps list ServiceBrokers.
// All objects returned here must be treated as read-only.
type ServiceBrokerLister interface {
	// List lists all ServiceBrokers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ServiceBroker, err error)
	// ServiceBrokers returns an object that can list and get ServiceBrokers.
	ServiceBrokers(namespace string) ServiceBrokerNamespaceLister
	ServiceBrokerListerExpansion
}

// serviceBrokerLister implements the ServiceBrokerLister interface.
type serviceBrokerLister struct {
	listers.ResourceIndexer[*v1beta1.ServiceBroker]
}

// NewServiceBrokerLister returns a new ServiceBrokerLister.
func NewServiceBrokerLister(indexer cache.Indexer) ServiceBrokerLister {
	return &serviceBrokerLister{listers.New[*v1beta1.ServiceBroker](indexer, v1beta1.Resource("servicebroker"))}
}

// ServiceBrokers returns an object that can list and get ServiceBrokers.
func (s *serviceBrokerLister) ServiceBrokers(namespace string) ServiceBrokerNamespaceLister {
	return serviceBrokerNamespaceLister{listers.NewNamespaced[*v1beta1.ServiceBroker](s.ResourceIndexer, namespace)}
}

// ServiceBrokerNamespaceLister helps list and get ServiceBrokers.
// All objects returned here must be treated as read-only.
type ServiceBrokerNamespaceLister interface {
	// List lists all ServiceBrokers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta1.ServiceBroker, err error)
	// Get retrieves the ServiceBroker from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta1.ServiceBroker, error)
	ServiceBrokerNamespaceListerExpansion
}

// serviceBrokerNamespaceLister implements the ServiceBrokerNamespaceLister
// interface.
type serviceBrokerNamespaceLister struct {
	listers.ResourceIndexer[*v1beta1.ServiceBroker]
}
